AESEncryption.java:

import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import java.util.Base64;

public class AESEncryption
{

private static final String AES = "AES";
private static final String AES_KEY="1234567890123456";
public static SecretKey getAESKey()
{
return new SecretKeySpec(AES_KEY.getBytes(), AES);
}
public static String encrypt(String message, SecretKey key)throws Exception
{
Cipher cipher = Cipher.getInstance(AES);
cipher.init(cipher.ENCRYPT_MODE, key);
byte[] encryptedBytes = cipher.doFinal(message.getBytes());
return Base64.getEncoder().encodeToString(encryptedBytes);
}
public static String decrypt(String encryptedMessage, SecretKey key)throws Exception
{
Cipher cipher = Cipher.getInstance(AES);
cipher.init(cipher.DECRYPT_MODE, key);
byte[]decodedBytes = Base64.getDecoder().decode(encryptedMessage);
byte[] decryptedBytes = cipher.doFinal(decodedBytes);
return new String(decryptedBytes);
}
}

clients.java:

import java.io.*;
import java.net.*;
import javax.crypto.SecretKey;
public class clients
{
   public static void main(String[] args)
    {
try
{
Socket socket = new Socket("localhost", 8080);
SecretKey key = AESEncryptionUtil.getAESKey();
String message = "Hello, Server............";
String encryptedMessage = AESEncryptionUtil.encrypt(message, key);
System.out.println("Encrypted message:"+encryptedMessage);
PrintWriter out = new PrintWriter(socket.getOutputStream(), true);
out.println(encryptedMessage);
BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
System.out.println("Server responce:"+in.readLine());
in.close();
out.close();socket.close();
}
catch (Exception e)
{
  e.printStackTrace();
  }

    }
}

servers.java:
import java.io.*;
import java.net.*;
import javax.crypto.SecretKey;
public class servers
{
public static void main(String[] args)
{
 try
  {
    ServerSocket serverSocket = new ServerSocket(8080);
    System.out.println("Server is running....");
             while(true)
{
Socket socket = serverSocket.accept();
System.out.println("Client connected");
BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
String encryptedMessage = in.readLine();
System.out.println("Recieved encrypted Message:" +encryptedMessage);
SecretKey key = AESEncryptionUtil.getAESKey();
try {
String decryptedMessage = AESEncryptionUtil.decrypt(encryptedMessage, key);
System.out.println("Decrypted message."+decryptedMessage);
PrintWriter out = new PrintWriter(socket.getOutputStream(), true);
out.println("Message recieved and decrypted successfully");
}catch(Exception e) {
System.out.println("Failed to decrypt message");
PrintWriter out = new PrintWriter(socket.getOutputStream(), true);
out.println("Only encrypted messages are processed");
}
socket.close();
}
}catch (Exception e)
{
e.printStackTrace();
}

}
}
